"use strict";(self.webpackChunk_terrestris_react_geo=self.webpackChunk_terrestris_react_geo||[]).push([[457],{42132:(e,n,t)=>{function decodeRowAcc(e,n){let t=e.length-n,r=0;do{for(let t=n;t>0;t--)e[r+n]+=e[r],r++;t-=n}while(t>0)}function decodeRowFloatingPoint(e,n,t){let r=0,o=e.length;const s=o/t;for(;o>n;){for(let t=n;t>0;--t)e[r+n]+=e[r],++r;o-=n}const a=e.slice();for(let n=0;n<s;++n)for(let r=0;r<t;++r)e[t*n+r]=a[(t-r-1)*s+n]}function applyPredictor(e,n,t,r,o,s){if(!n||1===n)return e;for(let e=0;e<o.length;++e){if(o[e]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(o[e]!==o[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const a=o[0]/8,i=2===s?1:o.length;for(let s=0;s<r&&!(s*i*t*a>=e.byteLength);++s){let r;if(2===n){switch(o[0]){case 8:r=new Uint8Array(e,s*i*t*a,i*t*a);break;case 16:r=new Uint16Array(e,s*i*t*a,i*t*a/2);break;case 32:r=new Uint32Array(e,s*i*t*a,i*t*a/4);break;default:throw new Error(`Predictor 2 not allowed with ${o[0]} bits per sample.`)}decodeRowAcc(r,i)}else 3===n&&(r=new Uint8Array(e,s*i*t*a,i*t*a),decodeRowFloatingPoint(r,i,a))}return e}t.d(n,{A:()=>r});class r{async decode(e,n){const t=await this.decodeBlock(n),r=e.Predictor||1;if(1!==r){const n=!e.StripOffsets;return applyPredictor(t,r,n?e.TileWidth:e.ImageWidth,n?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return t}}},76457:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(42132);const o=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),s=4017,a=799,i=3406,c=2276,l=1567,f=3784,d=5793,u=2896;function buildHuffmanTable(e,n){let t=0;const r=[];let o=16;for(;o>0&&!e[o-1];)--o;r.push({children:[],index:0});let s,a=r[0];for(let i=0;i<o;i++){for(let o=0;o<e[i];o++){for(a=r.pop(),a.children[a.index]=n[t];a.index>0;)a=r.pop();for(a.index++,r.push(a);r.length<=i;)r.push(s={children:[],index:0}),a.children[a.index]=s.children,a=s;t++}i+1<o&&(r.push(s={children:[],index:0}),a.children[a.index]=s.children,a=s)}return r[0].children}function decodeScan(e,n,t,r,s,a,i,c,l){const{mcusPerLine:f,progressive:d}=t,u=n;let h=n,m=0,p=0;function readBit(){if(p>0)return p--,m>>p&1;if(m=e[h++],255===m){const n=e[h++];if(n)throw new Error(`unexpected marker: ${(m<<8|n).toString(16)}`)}return p=7,m>>>7}function decodeHuffman(e){let n,t=e;for(;null!==(n=readBit());){if(t=t[n],"number"==typeof t)return t;if("object"!=typeof t)throw new Error("invalid huffman sequence")}return null}function receive(e){let n=e,t=0;for(;n>0;){const e=readBit();if(null===e)return;t=t<<1|e,--n}return t}function receiveAndExtend(e){const n=receive(e);return n>=1<<e-1?n:n+(-1<<e)+1}let b=0;let w,k=0;function decodeMcu(e,n,t,r,o){const s=t%f,a=(t/f|0)*e.v+r,i=s*e.h+o;n(e,e.blocks[a][i])}function decodeBlock(e,n,t){const r=t/e.blocksPerLine|0,o=t%e.blocksPerLine;n(e,e.blocks[r][o])}const A=r.length;let g,v,C,y,P,T;T=d?0===a?0===c?function decodeDCFirst(e,n){const t=decodeHuffman(e.huffmanTableDC),r=0===t?0:receiveAndExtend(t)<<l;e.pred+=r,n[0]=e.pred}:function decodeDCSuccessive(e,n){n[0]|=readBit()<<l}:0===c?function decodeACFirst(e,n){if(b>0)return void b--;let t=a;const r=i;for(;t<=r;){const r=decodeHuffman(e.huffmanTableAC),s=15&r,a=r>>4;if(0===s){if(a<15){b=receive(a)+(1<<a)-1;break}t+=16}else t+=a,n[o[t]]=receiveAndExtend(s)*(1<<l),t++}}:function decodeACSuccessive(e,n){let t=a;const r=i;let s=0;for(;t<=r;){const r=o[t],a=n[r]<0?-1:1;switch(k){case 0:{const n=decodeHuffman(e.huffmanTableAC),t=15&n;if(s=n>>4,0===t)s<15?(b=receive(s)+(1<<s),k=4):(s=16,k=1);else{if(1!==t)throw new Error("invalid ACn encoding");w=receiveAndExtend(t),k=s?2:3}continue}case 1:case 2:n[r]?n[r]+=(readBit()<<l)*a:(s--,0===s&&(k=2===k?3:0));break;case 3:n[r]?n[r]+=(readBit()<<l)*a:(n[r]=w<<l,k=0);break;case 4:n[r]&&(n[r]+=(readBit()<<l)*a)}t++}4===k&&(b--,0===b&&(k=0))}:function decodeBaseline(e,n){const t=decodeHuffman(e.huffmanTableDC),r=0===t?0:receiveAndExtend(t);e.pred+=r,n[0]=e.pred;let s=1;for(;s<64;){const t=decodeHuffman(e.huffmanTableAC),r=15&t,a=t>>4;if(0===r){if(a<15)break;s+=16}else s+=a,n[o[s]]=receiveAndExtend(r),s++}};let x,U,E=0;U=1===A?r[0].blocksPerLine*r[0].blocksPerColumn:f*t.mcusPerColumn;const L=s||U;for(;E<U;){for(v=0;v<A;v++)r[v].pred=0;if(b=0,1===A)for(g=r[0],P=0;P<L;P++)decodeBlock(g,T,E),E++;else for(P=0;P<L;P++){for(v=0;v<A;v++){g=r[v];const{h:e,v:n}=g;for(C=0;C<n;C++)for(y=0;y<e;y++)decodeMcu(g,T,E,C,y)}if(E++,E===U)break}if(p=0,x=e[h]<<8|e[h+1],x<65280)throw new Error("marker was not found");if(!(x>=65488&&x<=65495))break;h+=2}return h-u}function buildComponentData(e,n){const t=[],{blocksPerLine:r,blocksPerColumn:o}=n,h=r<<3,m=new Int32Array(64),p=new Uint8Array(64);function quantizeAndInverse(e,t,r){const o=n.quantizationTable;let h,m,p,b,w,k,A,g,v;const C=r;let y;for(y=0;y<64;y++)C[y]=e[y]*o[y];for(y=0;y<8;++y){const e=8*y;0!==C[1+e]||0!==C[2+e]||0!==C[3+e]||0!==C[4+e]||0!==C[5+e]||0!==C[6+e]||0!==C[7+e]?(h=d*C[0+e]+128>>8,m=d*C[4+e]+128>>8,p=C[2+e],b=C[6+e],w=u*(C[1+e]-C[7+e])+128>>8,g=u*(C[1+e]+C[7+e])+128>>8,k=C[3+e]<<4,A=C[5+e]<<4,v=h-m+1>>1,h=h+m+1>>1,m=v,v=p*f+b*l+128>>8,p=p*l-b*f+128>>8,b=v,v=w-A+1>>1,w=w+A+1>>1,A=v,v=g+k+1>>1,k=g-k+1>>1,g=v,v=h-b+1>>1,h=h+b+1>>1,b=v,v=m-p+1>>1,m=m+p+1>>1,p=v,v=w*c+g*i+2048>>12,w=w*i-g*c+2048>>12,g=v,v=k*a+A*s+2048>>12,k=k*s-A*a+2048>>12,A=v,C[0+e]=h+g,C[7+e]=h-g,C[1+e]=m+A,C[6+e]=m-A,C[2+e]=p+k,C[5+e]=p-k,C[3+e]=b+w,C[4+e]=b-w):(v=d*C[0+e]+512>>10,C[0+e]=v,C[1+e]=v,C[2+e]=v,C[3+e]=v,C[4+e]=v,C[5+e]=v,C[6+e]=v,C[7+e]=v)}for(y=0;y<8;++y){const e=y;0!==C[8+e]||0!==C[16+e]||0!==C[24+e]||0!==C[32+e]||0!==C[40+e]||0!==C[48+e]||0!==C[56+e]?(h=d*C[0+e]+2048>>12,m=d*C[32+e]+2048>>12,p=C[16+e],b=C[48+e],w=u*(C[8+e]-C[56+e])+2048>>12,g=u*(C[8+e]+C[56+e])+2048>>12,k=C[24+e],A=C[40+e],v=h-m+1>>1,h=h+m+1>>1,m=v,v=p*f+b*l+2048>>12,p=p*l-b*f+2048>>12,b=v,v=w-A+1>>1,w=w+A+1>>1,A=v,v=g+k+1>>1,k=g-k+1>>1,g=v,v=h-b+1>>1,h=h+b+1>>1,b=v,v=m-p+1>>1,m=m+p+1>>1,p=v,v=w*c+g*i+2048>>12,w=w*i-g*c+2048>>12,g=v,v=k*a+A*s+2048>>12,k=k*s-A*a+2048>>12,A=v,C[0+e]=h+g,C[56+e]=h-g,C[8+e]=m+A,C[48+e]=m-A,C[16+e]=p+k,C[40+e]=p-k,C[24+e]=b+w,C[32+e]=b-w):(v=d*r[y+0]+8192>>14,C[0+e]=v,C[8+e]=v,C[16+e]=v,C[24+e]=v,C[32+e]=v,C[40+e]=v,C[48+e]=v,C[56+e]=v)}for(y=0;y<64;++y){const e=128+(C[y]+8>>4);t[y]=e<0?0:e>255?255:e}}for(let e=0;e<o;e++){const o=e<<3;for(let e=0;e<8;e++)t.push(new Uint8Array(h));for(let s=0;s<r;s++){quantizeAndInverse(n.blocks[e][s],p,m);let r=0;const a=s<<3;for(let e=0;e<8;e++){const n=t[o+e];for(let e=0;e<8;e++)n[a+e]=p[r++]}}}return t}class h{constructor(){this.jfif=null,this.adobe=null,this.quantizationTables=[],this.huffmanTablesAC=[],this.huffmanTablesDC=[],this.resetFrames()}resetFrames(){this.frames=[]}parse(e){let n=0;function readUint16(){const t=e[n]<<8|e[n+1];return n+=2,t}function readDataBlock(){const t=readUint16(),r=e.subarray(n,n+t-2);return n+=r.length,r}function prepareComponents(e){let n,t,r=0,o=0;for(t in e.components)e.components.hasOwnProperty(t)&&(n=e.components[t],r<n.h&&(r=n.h),o<n.v&&(o=n.v));const s=Math.ceil(e.samplesPerLine/8/r),a=Math.ceil(e.scanLines/8/o);for(t in e.components)if(e.components.hasOwnProperty(t)){n=e.components[t];const i=Math.ceil(Math.ceil(e.samplesPerLine/8)*n.h/r),c=Math.ceil(Math.ceil(e.scanLines/8)*n.v/o),l=s*n.h,f=a*n.v,d=[];for(let e=0;e<f;e++){const e=[];for(let n=0;n<l;n++)e.push(new Int32Array(64));d.push(e)}n.blocksPerLine=i,n.blocksPerColumn=c,n.blocks=d}e.maxH=r,e.maxV=o,e.mcusPerLine=s,e.mcusPerColumn=a}let t=readUint16();if(65496!==t)throw new Error("SOI not found");for(t=readUint16();65497!==t;){switch(t){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:{const e=readDataBlock();65504===t&&74===e[0]&&70===e[1]&&73===e[2]&&70===e[3]&&0===e[4]&&(this.jfif={version:{major:e[5],minor:e[6]},densityUnits:e[7],xDensity:e[8]<<8|e[9],yDensity:e[10]<<8|e[11],thumbWidth:e[12],thumbHeight:e[13],thumbData:e.subarray(14,14+3*e[12]*e[13])}),65518===t&&65===e[0]&&100===e[1]&&111===e[2]&&98===e[3]&&101===e[4]&&0===e[5]&&(this.adobe={version:e[6],flags0:e[7]<<8|e[8],flags1:e[9]<<8|e[10],transformCode:e[11]});break}case 65499:{const t=readUint16()+n-2;for(;n<t;){const t=e[n++],r=new Int32Array(64);if(t>>4){if(t>>4!=1)throw new Error("DQT: invalid table spec");for(let e=0;e<64;e++){r[o[e]]=readUint16()}}else for(let t=0;t<64;t++){r[o[t]]=e[n++]}this.quantizationTables[15&t]=r}break}case 65472:case 65473:case 65474:{readUint16();const r={extended:65473===t,progressive:65474===t,precision:e[n++],scanLines:readUint16(),samplesPerLine:readUint16(),components:{},componentsOrder:[]},o=e[n++];let s;for(let t=0;t<o;t++){s=e[n];const t=e[n+1]>>4,o=15&e[n+1],a=e[n+2];r.componentsOrder.push(s),r.components[s]={h:t,v:o,quantizationIdx:a},n+=3}prepareComponents(r),this.frames.push(r);break}case 65476:{const t=readUint16();for(let r=2;r<t;){const t=e[n++],o=new Uint8Array(16);let s=0;for(let t=0;t<16;t++,n++)o[t]=e[n],s+=o[t];const a=new Uint8Array(s);for(let t=0;t<s;t++,n++)a[t]=e[n];r+=17+s,t>>4?this.huffmanTablesAC[15&t]=buildHuffmanTable(o,a):this.huffmanTablesDC[15&t]=buildHuffmanTable(o,a)}break}case 65501:readUint16(),this.resetInterval=readUint16();break;case 65498:{readUint16();const t=e[n++],r=[],o=this.frames[0];for(let s=0;s<t;s++){const t=o.components[e[n++]],s=e[n++];t.huffmanTableDC=this.huffmanTablesDC[s>>4],t.huffmanTableAC=this.huffmanTablesAC[15&s],r.push(t)}const s=e[n++],a=e[n++],i=e[n++],c=decodeScan(e,n,o,r,this.resetInterval,s,a,i>>4,15&i);n+=c;break}case 65535:255!==e[n]&&n--;break;default:if(255===e[n-3]&&e[n-2]>=192&&e[n-2]<=254){n-=3;break}throw new Error(`unknown JPEG marker ${t.toString(16)}`)}t=readUint16()}}getResult(){const{frames:e}=this;if(0===this.frames.length)throw new Error("no frames were decoded");this.frames.length>1&&console.warn("more than one frame is not supported");for(let e=0;e<this.frames.length;e++){const n=this.frames[e].components;for(const e of Object.keys(n))n[e].quantizationTable=this.quantizationTables[n[e].quantizationIdx],delete n[e].quantizationIdx}const n=e[0],{components:t,componentsOrder:r}=n,o=[],s=n.samplesPerLine,a=n.scanLines;for(let e=0;e<r.length;e++){const s=t[r[e]];o.push({lines:buildComponentData(0,s),scaleX:s.h/n.maxH,scaleY:s.v/n.maxV})}const i=new Uint8Array(s*a*o.length);let c=0;for(let e=0;e<a;++e)for(let n=0;n<s;++n)for(let t=0;t<o.length;++t){const r=o[t];i[c]=r.lines[0|e*r.scaleY][0|n*r.scaleX],++c}return i}}class m extends r.A{constructor(e){super(),this.reader=new h,e.JPEGTables&&this.reader.parse(e.JPEGTables)}decodeBlock(e){return this.reader.resetFrames(),this.reader.parse(new Uint8Array(e)),this.reader.getResult().buffer}}}}]);