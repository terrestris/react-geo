"use strict";(self.webpackChunk_terrestris_react_geo=self.webpackChunk_terrestris_react_geo||[]).push([[672],{67737:(e,t,r)=>{function decodeRowAcc(e,t){let r=e.length-t,n=0;do{for(let r=t;r>0;r--)e[n+t]+=e[n],n++;r-=t}while(r>0)}function decodeRowFloatingPoint(e,t,r){let n=0,o=e.length;const i=o/r;for(;o>t;){for(let r=t;r>0;--r)e[n+t]+=e[n],++n;o-=t}const c=e.slice();for(let t=0;t<i;++t)for(let n=0;n<r;++n)e[r*t+n]=c[(r-n-1)*i+t]}function applyPredictor(e,t,r,n,o,i){if(!t||1===t)return e;for(let e=0;e<o.length;++e){if(o[e]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(o[e]!==o[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const c=o[0]/8,s=2===i?1:o.length;for(let i=0;i<n&&!(i*s*r*c>=e.byteLength);++i){let n;if(2===t){switch(o[0]){case 8:n=new Uint8Array(e,i*s*r*c,s*r*c);break;case 16:n=new Uint16Array(e,i*s*r*c,s*r*c/2);break;case 32:n=new Uint32Array(e,i*s*r*c,s*r*c/4);break;default:throw new Error(`Predictor 2 not allowed with ${o[0]} bits per sample.`)}decodeRowAcc(n,s)}else 3===t&&(n=new Uint8Array(e,i*s*r*c,s*r*c),decodeRowFloatingPoint(n,s,c))}return e}r.d(t,{Z:()=>n});class n{async decode(e,t){const r=await this.decodeBlock(t),n=e.Predictor||1;if(1!==n){const t=!e.StripOffsets;return applyPredictor(r,n,t?e.TileWidth:e.ImageWidth,t?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return r}}},8672:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});var n=r(67737);const o=257;function getByte(e,t,r){const n=t%8,i=Math.floor(t/8),c=8-n,s=t+r-8*(i+1);let a=8*(i+2)-(t+r);const d=8*(i+2)-t;if(a=Math.max(0,a),i>=e.length)return console.warn("ran off the end of the buffer before finding EOI_CODE (end on input code)"),o;let l=e[i]&2**(8-n)-1;l<<=r-c;let f=l;if(i+1<e.length){let t=e[i+1]>>>a;t<<=Math.max(0,r-d),f+=t}if(s>8&&i+2<e.length){const n=8*(i+3)-(t+r);f+=e[i+2]>>>n}return f}function appendReversed(e,t){for(let r=t.length-1;r>=0;r--)e.push(t[r]);return e}function decompress(e){const t=new Uint16Array(4093),r=new Uint8Array(4093);for(let e=0;e<=257;e++)t[e]=4096,r[e]=e;let n=258,i=9,c=0;function initDictionary(){n=258,i=9}function getNext(e){const t=getByte(e,c,i);return c+=i,t}function addToDictionary(e,o){return r[n]=o,t[n]=e,n++,n-1}function getDictionaryReversed(e){const n=[];for(let o=e;4096!==o;o=t[o])n.push(r[o]);return n}const s=[];initDictionary();const a=new Uint8Array(e);let d,l=getNext(a);for(;l!==o;){if(256===l){for(initDictionary(),l=getNext(a);256===l;)l=getNext(a);if(l===o)break;if(l>256)throw new Error(`corrupted code at scanline ${l}`);appendReversed(s,getDictionaryReversed(l)),d=l}else if(l<n){const e=getDictionaryReversed(l);appendReversed(s,e),addToDictionary(d,e[e.length-1]),d=l}else{const e=getDictionaryReversed(d);if(!e)throw new Error(`Bogus entry. Not in dictionary, ${d} / ${n}, position: ${c}`);appendReversed(s,e),s.push(e[e.length-1]),addToDictionary(d,e[e.length-1]),d=l}n+1>=2**i&&(12===i?d=void 0:i++),l=getNext(a)}return new Uint8Array(s)}class i extends n.Z{decodeBlock(e){return decompress(e).buffer}}}}]);